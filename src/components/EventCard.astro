---
import { timeAndDate } from '@/tools/events'
import type { FullEvent } from '@/types'
import { Image } from 'astro:assets'

interface Props {
  event: FullEvent
}

const {
  event: {
    data: { organizer, location, image },
  },
  event,
} = Astro.props

const target = event.data.url ? '_blank' : '_self'
---

<a
  class="my-4 flex md:h-48 flex-col items-center md:justify-end bg-white border border-gray-200 rounded-lg shadow md:flex-row md:max-w-xl hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700"
  href={event.data.url ?? `events/${event.slug}`}
  target={target}
>
  {
    image ? (
      <div class="w-full rounded-t-lg md:h-auto md:w-1/3 md:rounded-none md:rounded-l-lg overflow-hidden">
        <Image
          class="object-cover h-32 md:h-48 "
          src={image.src}
          alt={image.alt}
        />
      </div>
    ) : null
  }
  <div class="flex flex-col justify-between p-4 leading-normal w-full md:w-2/3">
    <p class="font-bold dark:text-slate-200">{event.data.name}</p>
    {
      organizer && (
        <p class="text-gray-500">Veranstalter:in: {organizer.data.name}</p>
      )
    }
    {
      location && (
        <p class="text-gray-800 dark:text-slate-400">
          Ort: {location.data.name}
        </p>
      )
    }
    <p class="text-gray-600 dark:text-slate-100">
      {timeAndDate(event.data.startDate)}
    </p>
    {
      event.data.description && (
        <div class="text-gray-800 dark:text-slate-100 line-clamp-2">
          {event.data.description}
        </div>
      )
    }
  </div>
</a>
